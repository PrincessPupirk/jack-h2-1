class Map {
    field Array _blockArray;  // массив блоков карты
    field int _width;        // ширина карты в блоках
    field int _height;       // высота карты в блоках

    /** создает новую карту с указанными размерами и массивом блоков */
    constructor Map new(Array blockArray, int width, int height){
        let _blockArray = blockArray;
        let _width = width;
        let _height = height;
        return this;
    }

    /** 
    * возвращает блок по координатам на карте
    * если координаты вне карты, возвращает -1 
    */
    method Block getBlock(int x, int y){
        if ((x < 0) | (y < 0) | (x + 1 > _width) | (y + 1 > _height)){
            return -1;
        }

        return _blockArray[y * _width + x];
    }

    /** заменяет блок на указанной позиции на air (пустота) */
    method void removeBlock(int x, int y) {
        let _blockArray[y * _width + x] = Block.getAir();
        return;
    }

    /** рисует всю карту с указанным смещением и размером блоков */
    method void render(int startX, int startY, int blockWidth, int blockHeight){
        var Block block;
        var int mapSize;
        var int x;
        var int y;

        // рисуем все блоки
        while (y < _height){
            while (x < _width){
                let block = _blockArray[y * _width + x];
                do block.render(startX + (x * blockWidth), startY + (y * blockHeight), blockWidth, blockHeight);

                let x = x + 1;
            }

            let x = 0;
            let y = y + 1;
        }

        return;
    }

    /** 
    * перерисовывает один блок на определенной позиции
    * юзаем для оптимизации отрисовки при изменении одного блока
    */
    method void reRender(int startX, int startY, int gameX, int gameY) {
        var int x;
        var int y;
        var Block block;

        // вычисляем координаты
        let x = startX + (gameX * 16);
        let y = startY + (gameY * 16);

        // очищаем область блока
        do Screen.setColor(false);
        do Screen.drawRectangle(x, y, x + 15, y + 15);
        do Screen.setColor(true);

        // рисуем новый блок
        let block = getBlock(gameX, gameY);
        if (~(block = -1)) {
            do block.render(x, y, 16, 16);
        }

        return;
    }

    /** возвращает ширину карты в блоках */
    method int getWidth() {
        return _width;
    }

    /** возвращает высоту карты в блоках */
    method int getHeight() {
        return _height;
    }
}
