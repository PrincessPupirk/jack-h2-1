function Level.new 0
push constant 3
call Memory.alloc 1
pop pointer 0
push argument 1
pop this 0
push argument 2
pop this 1
push argument 0
call Score.new 1
pop this 2
push pointer 0
return
function Level.render 0
push argument 0
pop pointer 0
push this 0
push argument 1
push argument 2
push constant 16
push constant 16
call Map.render 5
pop temp 0
push this 1
push argument 1
push argument 2
call Player.render 3
pop temp 0
push this 2
call Score.render 1
pop temp 0
push constant 0
return
function Level.getMap 0
push argument 0
pop pointer 0
push this 0
return
function Level.getPlayer 0
push argument 0
pop pointer 0
push this 1
return
function Level.getScore 0
push argument 0
pop pointer 0
push this 2
return
function Level.parse 7
push argument 2
push argument 3
call Math.multiply 2
call Array.new 1
pop local 3
label WHILE_EXP0
push local 6
push argument 3
lt
not
if-goto WHILE_END0
push local 6
push argument 1
add
pop pointer 1
push that 0
pop local 4
label WHILE_EXP1
push local 5
push argument 2
lt
not
if-goto WHILE_END1
push local 4
push local 5
call String.charAt 2
pop local 2
push local 2
push constant 80
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 5
push local 6
call Player.new 2
pop local 1
label IF_FALSE0
push local 6
push argument 2
call Math.multiply 2
push local 5
add
push local 3
add
push local 2
call Block.parse 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 5
push constant 1
add
pop local 5
goto WHILE_EXP1
label WHILE_END1
push constant 0
pop local 5
push local 6
push constant 1
add
pop local 6
goto WHILE_EXP0
label WHILE_END0
push local 3
push argument 2
push argument 3
call Map.new 3
pop local 0
push argument 0
push local 0
push local 1
call Level.new 3
return
