class Score {
    field int _levelId;
    field int _coins;
    field int _keys;

    /** Создает новый счетчик для указанного уровня */
    constructor Score new(int levelId) {
        let _coins = 0;
        let _keys = 0;
        let _levelId = levelId;
        return this;
    }

    method void renderScore() {
        do Output.moveCursor(0, 0);
        do Util.printInline("Level ");
        do Output.printInt(_levelId);

        do Output.moveCursor(0, 15);
        do Util.printInline("Coins: ");
        do Output.printInt(_coins);
        
        do Output.moveCursor(0, 31);
        do Util.printInline("Keys: ");
        do Output.printInt(_keys);
        return;
    }

    method void incrementCoins() {
        let _coins = _coins + 1;
        do renderScore();
        return;
    }

    method void incrementKeys() {
        let _keys = _keys + 1;
        do renderScore();
        return;
    }

    method void decrementKeys() {
        let _keys = _keys - 1;
        do renderScore();
        return;
    }

    method void setCoins(int coins) {
        let _coins = coins;
        do renderScore();
        return;
    }

    method int getCoins() {
        return _coins;
    }

    /** Проверяет, есть ли у игрока ключ */
    method boolean hasKey() {
        return _keys > 0;
    }

    method void dispose() {
        do Memory.deAlloc(this);
        return;
    }
}
