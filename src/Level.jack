class Level {
    field Map _map;        // карта уровня
    field Player _player;  // игрок на уровне
    field Score _score;    // счет уровня

    /** Создает новый уровень с указанной картой и игроком */
    constructor Level new(int levelId, Map map, Player player){
        let _map = map;
        let _player = player;
        let _score = Score.new(levelId);
        return this;
    }

    method void render(int startX, int startY){
        do _map.render(startX, startY, 16, 16);
        do _player.render(startX, startY);
        do _score.render();
        return;
    }

    method Map getMap() {
        return _map;
    }

    method Player getPlayer() {
        return _player;
    }

    method Score getScore() {
        return _score;
    }

    /** Парсит карту и игрока из массива строк */
    function Level parse(int levelId, Array strArray, int width, int height){
        var Map map;
        var Player player;
        var char currentChar;
        var Array blockArray;
        var String line;
        var int x;
        var int y;

        let blockArray = Array.new(width * height);
        while (y < height){
            let line = strArray[y];

            while (x < width){
                let currentChar = line.charAt(x);
                if (currentChar = 80){ // 'P' = player
                    let player = Player.new(x, y);
                }
                
                let blockArray[y * width + x] = Block.parse(currentChar);
                let x = x + 1;
            }

            let x = 0;
            let y = y + 1;
        }

        let map = Map.new(blockArray, width, height);
        return Level.new(levelId, map, player);
    }
}
